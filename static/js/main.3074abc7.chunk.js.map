{"version":3,"sources":["source/Section01.png","App.js","reportWebVitals.js","index.js"],"names":["App","camera","scene","renderer","isUserInteracting","onPointerDownMouseX","onPointerDownMouseY","lon","onPointerDownLon","lat","onPointerDownLat","phi","theta","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","onPointerDown","event","isPrimary","clientX","clientY","document","addEventListener","onPointerMove","onPointerUp","removeEventListener","onDocumentMouseWheel","fov","deltaY","THREE","clamp","geometry","scale","texture","load","section_01","material","map","mesh","add","setPixelRatio","devicePixelRatio","body","appendChild","domElement","style","touchAction","preventDefault","dataTransfer","dropEffect","opacity","reader","FileReader","image","src","target","result","needsUpdate","readAsDataURL","files","init","animate","requestAnimationFrame","Math","max","min","degToRad","x","sin","cos","y","z","lookAt","render","update","ref","mount","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3074abc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Section01.2538bec8.png\";","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as THREE from 'three';\r\nimport './App.css';\r\nimport section_01 from \"./source/Section01.png\"\r\n// import VR from './vr.js';\r\n\r\nclass App extends Component{\r\n    componentDidMount(){\r\n      let camera,\r\n          scene,\r\n          renderer;\r\n\r\n      let isUserInteracting = false,\r\n          onPointerDownMouseX = 0,\r\n          onPointerDownMouseY = 0,\r\n          lon = 0,\r\n          onPointerDownLon = 0,\r\n          lat = 0,\r\n          onPointerDownLat = 0,\r\n          phi = 0,\r\n          theta = 0;\r\n\r\n      init();\r\n      animate();\r\n\r\n      function init() {\r\n\r\n          // const container = document.getElementById('root');\r\n\r\n          camera = new THREE.PerspectiveCamera(\r\n              75,\r\n              window.innerWidth / window.innerHeight,\r\n              1,\r\n              1100\r\n          );\r\n\r\n          scene = new THREE.Scene();\r\n\r\n          const geometry = new THREE.SphereGeometry(500, 60, 40);\r\n          // invert the geometry on the x-axis so that all of the faces point inward\r\n          geometry.scale(-1, 1, 1);\r\n\r\n          const texture = new THREE\r\n              .TextureLoader()\r\n              .load(section_01);\r\n          const material = new THREE.MeshBasicMaterial({map: texture});\r\n\r\n          const mesh = new THREE.Mesh(geometry, material);\r\n\r\n          scene.add(mesh);\r\n\r\n          renderer = new THREE.WebGLRenderer();\r\n          renderer.setPixelRatio(window.devicePixelRatio);\r\n          renderer.setSize(window.innerWidth, window.innerHeight);\r\n          // container.appendChild(renderer.domElement);\r\n          document.body.appendChild( renderer.domElement );\r\n\r\n          document.body.style.touchAction = 'none';\r\n          document.body.addEventListener('pointerdown', onPointerDown);\r\n\r\n          document.addEventListener('wheel', onDocumentMouseWheel);\r\n\r\n          document.addEventListener('dragover', function (event) {\r\n\r\n              event.preventDefault();\r\n              event.dataTransfer.dropEffect = 'copy';\r\n\r\n          });\r\n\r\n          document.addEventListener('dragenter', function () {\r\n\r\n              document.body.style.opacity = 0.5;\r\n\r\n          });\r\n\r\n          document.addEventListener('dragleave', function () {\r\n\r\n              document.body.style.opacity = 1;\r\n\r\n          });\r\n\r\n          document.addEventListener('drop', function (event) {\r\n\r\n              event.preventDefault();\r\n\r\n              const reader = new FileReader();\r\n              reader.addEventListener('load', function (event) {\r\n\r\n                  material.map.image.src = event.target.result;\r\n                  material.map.needsUpdate = true;\r\n\r\n              });\r\n              reader.readAsDataURL(event.dataTransfer.files[0]);\r\n\r\n              document.body.style.opacity = 1;\r\n\r\n          });\r\n\r\n          //\r\n\r\n          window.addEventListener('resize', onWindowResize);\r\n\r\n      }\r\n\r\n      function onWindowResize() {\r\n\r\n          camera.aspect = window.innerWidth / window.innerHeight;\r\n          camera.updateProjectionMatrix();\r\n\r\n          renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n      };\r\n\r\n      function onPointerDown(event) {\r\n\r\n          if (event.isPrimary === false) \r\n              return;\r\n          \r\n          isUserInteracting = true;\r\n\r\n          onPointerDownMouseX = event.clientX;\r\n          onPointerDownMouseY = event.clientY;\r\n\r\n          onPointerDownLon = lon;\r\n          onPointerDownLat = lat;\r\n\r\n          document.addEventListener('pointermove', onPointerMove);\r\n          document.addEventListener('pointerup', onPointerUp);\r\n\r\n      };\r\n\r\n      function onPointerMove(event) {\r\n\r\n          if (event.isPrimary === false) \r\n              return;\r\n          \r\n          lon = (onPointerDownMouseX - event.clientX) * 0.1 + onPointerDownLon;\r\n          lat = (event.clientY - onPointerDownMouseY) * 0.1 + onPointerDownLat;\r\n\r\n      };\r\n\r\n      function onPointerUp() {\r\n\r\n          // if (event.isPrimary === false) return;\r\n\r\n          isUserInteracting = false;\r\n\r\n          document.removeEventListener('pointermove', onPointerMove);\r\n          document.removeEventListener('pointerup', onPointerUp);\r\n\r\n      };\r\n\r\n      function onDocumentMouseWheel(event) {\r\n\r\n          const fov = camera.fov + event.deltaY * 0.05;\r\n\r\n          camera.fov = THREE\r\n              .MathUtils\r\n              .clamp(fov, 10, 75);\r\n\r\n          camera.updateProjectionMatrix();\r\n\r\n      };\r\n\r\n      function animate() {\r\n\r\n          requestAnimationFrame(animate);\r\n          // renderer.render( scene, camera );\r\n          update();\r\n\r\n      };\r\n\r\n      function update() {\r\n\r\n          if (isUserInteracting === false) {\r\n\r\n              lon += 0.1;\r\n\r\n          }\r\n\r\n          lat = Math.max(-85, Math.min(85, lat));\r\n          phi = THREE\r\n              .MathUtils\r\n              .degToRad(90 - lat);\r\n          theta = THREE\r\n              .MathUtils\r\n              .degToRad(lon);\r\n\r\n          const x = 500 * Math.sin(phi) * Math.cos(theta);\r\n          const y = 500 * Math.cos(phi);\r\n          const z = 500 * Math.sin(phi) * Math.sin(theta);\r\n\r\n          camera.lookAt(x, y, z);\r\n\r\n          renderer.render(scene, camera);\r\n        }\r\n      }\r\n      render() {\r\n        return (\r\n            <div ref={ref => (this.mount = ref)} />\r\n        );\r\n    }\r\n\r\n  }\r\n// const rootElement = document.getElementById(\"root\")\r\n// ReactDOM.render(<App />, rootElement);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}